spring.application.name=Payment-service

server.port=8081

# H2 Database Configuration
spring.datasource.url=jdbc:h2:mem:paymentdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.jpa.hibernate.ddl-auto=update

# Eureka Client Configuration
eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
eureka.instance.preferIpAddress=true

# Resilience4j Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.payment.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.payment.slidingWindowSize=10
resilience4j.circuitbreaker.instances.payment.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.payment.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.payment.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.payment.failureRateThreshold=50

# Resilience4j Retry Configuration
resilience4j.retry.instances.payment.maxAttempts=3
resilience4j.retry.instances.payment.waitDuration=1s
resilience4j.retry.instances.payment.enableExponentialBackoff=true
resilience4j.retry.instances.payment.exponentialBackoffMultiplier=2

# Resilience4j TimeLimiter Configuration
resilience4j.timelimiter.instances.payment.timeoutDuration=5s
resilience4j.timelimiter.instances.payment.cancelRunningFuture=true

# Resilience4j RateLimiter Configuration
resilience4j.ratelimiter.instances.paymentApi.limitForPeriod=10
resilience4j.ratelimiter.instances.paymentApi.limitRefreshPeriod=1s
resilience4j.ratelimiter.instances.paymentApi.timeoutDuration=0

# Actuator Endpoint Configuration
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true
